package br.com.sos24horas.tcc;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import br.com.sos24horas.tcc.gcm.GCMCliente;

import com.google.android.gcm.GCMRegistrar;

public class MainActivity extends Activity {
	
	GCMCliente gcm = null;
	private static final String PROJETO_ID = "994547673653";
	
	private static final String TAG = "GCMActivity";
	String regId  = "";
	
	private String statusRegistro = "Não registrado";
	private String broadcastMessage = "Não há mensagem";
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		Button b = (Button) findViewById(R.id.button1);
		b.setOnClickListener(listener);
		
		registerReceiver(gcmReceiver, new IntentFilter("GCM_RECEIVED_ACTION"));
		
		GCMRegistrar.register(this, PROJETO_ID);
		
		
        try {
			
			GCMRegistrar.checkDevice(context);
			
			GCMRegistrar.checkManifest(context);
			
			 = GCMRegistrar.getRegistrationId(context);
			
			
			if(regId.equals("")){
				
				statusRegistro = "Registrando...";
				GCMRegistrar.register(context, PROJETO_ID);
				regId = GCMRegistrar.getRegistrationId(context);
				statusRegistro = "Registro adquirido";
				Log.d(TAG, "Já registrado com id:" + regId);
				
			}else{
				statusRegistro = "Atualmente registrado";
				Log.d(TAG, "Já registrado com id:" + regId);
			}			
			
		} catch (Exception e) {
			Log.e(TAG, e.getMessage());
			statusRegistro = "Erro registrando dispositivo";
			//TODO: lança uma exception aqui caso registro não ocorra
		}
		
		Log.d(TAG, statusRegistro);
		Log.d(TAG, regId);	
		
		
		
		
	}
	
	private OnClickListener listener = new OnClickListener() {
		
		@Override
		public void onClick(View v) {
			
			gcm = new GCMCliente();
			gcm.iniciar(MainActivity.this);
			gcm.registrarCliente(MainActivity.this);
			
			
		}
	};
	
	/**
	 * Classe anónima sobrescrevendo o método onReceiver
	 */
	private BroadcastReceiver gcmReceiver = new BroadcastReceiver() {
		
		@Override
		public void onReceive(Context context, Intent intent) {
			
			broadcastMessage = intent.getExtras().getString("gcm");
			if (broadcastMessage != null){
				//TODO: fazer alguma coisa com a mensagem
				
			}
			
		}
	};

	
	public void onDestroy() {
		 gcm.parar(this);
	     super.onDestroy();	
		
	}
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}

}
